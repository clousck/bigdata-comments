---
import background from '../assets/bg.jpg';
---

<html>
    <img id="background" src={background.src} alt="" fetchpriority="high" />
	<body>
		<!-- Título centrado -->
		<h1>Proyecto grupal de Big Data</h1>
		<h2>
			Análisis de sentimientos en comentarios de películas (IMDB) usando
			RNN (LSTM)
		</h2>

		<!-- Lista de integrantes alineada a la izquierda -->
		<div class="group-members">
			<p>Integrantes:</p>
			<ul>
				<li>De la Cruz Brayan</li>
				<li>Echeverría Victor</li>
				<li>Sandoval Alan</li>
			</ul>
		</div>

		<!-- Cuadro de comentarios -->
		<div class="comment-box">
			<p id="result"></p>
			<textarea id="comment" placeholder="Escribe tu comentario aquí..."
			></textarea>
			<button id="sendCommentButton">Enviar Comentario</button>
		</div>
	</body>
</html>

<script type="module">
    async function sendComment() {
        console.log("Mensaje enviado");
        const commentInput = document.getElementById("comment");
        const resultElement = document.getElementById("result");

        // Validar el comentario
        if (
            !commentInput ||
            !commentInput.value.trim()
        ) {
            alert(
                "Por favor, escribe un comentario antes de enviarlo.",
            );
            return;
        }

        const comment = commentInput.value.trim();

        try {
            // URL del endpoint de la API (reemplázala con la URL correcta)
            const apiUrl = "https://analisis-sentimientos-d5bbfphqccd4g3b3.eastus-01.azurewebsites.net/predict_api";
            //const apiUrl = "http://8b23ca8d-f4ec-4e09-9bd0-cd1b056a9816.eastus.azurecontainer.io";

            // Hacer la solicitud a la API
            const response = await fetch(apiUrl, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    //"Ocp-Apim-Subscription-Key": "nooJBINpc7bnqHGVjyqlGXVhBBKA3sLj", // Reemplaza con la clave API
                },
                body: JSON.stringify({ comment }), // Enviamos el comentario como JSON
            });
            
            console.log(response.body);

            // Manejar la respuesta de la API
            if (!response.ok) {
                throw new Error("Error al comunicarse con la API");
            }

            const data = await response.json(); //0 o 1 según la API
            const sentiment = data.result;

            if (sentiment === 1) {
                resultElement.textContent =
                    "El comentario es positivo.";
            } else if (sentiment === 0) {
                resultElement.textContent =
                    "El comentario es negativo.";
            } else {
                resultElement.textContent =
                    "No se pudo determinar el sentimiento del comentario.\n" + sentiment;
            }
        } catch (error) {
            console.error("Error al analizar el comentario:", error);
            alert(
                "Hubo un problema al enviar el comentario. Inténtalo de nuevo.",
            );
        }
    }

    document.getElementById("sendCommentButton").addEventListener("click", sendComment)
</script>

<style>
    #background {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: -1;
	}
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    h1 {
        font-size: 2rem;
        color: #222222c5;
        margin-bottom: 1px;
        text-align: center;
    }
    h2 {
        font-size: 1.8rem;
        color: #222222c5;
        margin-bottom: 1px;
        text-align: center;
    }
    .group-members {
        align-self: flex-start; /* Alineado a la izquierda */
        margin-left: 15%;
        margin-bottom: 20px;
        font-size: 1.2rem;
        color: #222222c5;
    }
    .comment-box {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
        max-width: 400px;
    }
    textarea {
        width: 100%;
        height: 100px;
        margin-bottom: 10px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 1rem;
    }
    button {
        padding: 10px 20px;
        background-color: #4caf50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1rem;
    }
    button:hover {
        background-color: #45a049;
    }
</style>